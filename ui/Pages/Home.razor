@page "/"
@inherits AuthenticatedComponentBase
@attribute [Authorize]

<PageTitle>Home | Student Finder</PageTitle>

<h3 style="text-align: center;">Welcome to the Student Finder</h3>

<div style="display: flex; justify-content: center; align-items: center; padding-top: 100px;">
    <div class="mb-3 row" style="width: 550px;">
        <div class="col-sm-12">
            <input type="text" placeholder="Search Student By Name..." @bind="searchItem" class="form-control"
                id="searchItem">
        </div>
    </div>

    <div class="mb-3 row" style="width: 100px; margin-left: 20px;">
        <div class="col-sm-10">
            <button style="width: 100px;" @onclick="OnSearch" type="button" class="btn btn-success">Search</button>
        </div>
    </div>

</div>

<div style="display: flex; flex-direction: column; justify-content: center; align-items: center;">
@if (!string.IsNullOrWhiteSpace(searchItem))
{
    <div class="list-group" style="width: 650px; padding-top: 50px;">
        @if(isLoading)
        {
            <Loading />
        }
        <p style="text-align: center; font-size: large;">Search Results for '@searchItem' (@(users.Count))</p>
        @if (users.Count != 0)
        {
            @foreach (var user in users)
            {
                <a @onclick="() => NavigateToStudentInfo(user.id!)" class="list-group-item list-group-item-action" aria-current="true"
                    style="margin-bottom: 20px; border-width: 1px; cursor: pointer;">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1">@user.firstName @user.lastName</h5> <br>
                        <small>@user.email</small>
                    </div>
                    @if (user.programme == null) 
                    {
                        <small class="mb-1">No programme specified</small>
                    }
                    else 
                    {
                        <small class="mb-1">@user.programme</small>
                    }

                </a>
            }
        }else
        {
            <p style="text-align: center;">No user found</p>
        } 
       
    </div>
} 
else
{
    <p style="text-align: center;">Search student to display results</p>
}
</div>

@code {

    private string? searchItem;
    private bool isLoading = false;

    private List<StudentApiReponseDTO> users = new List<StudentApiReponseDTO>();

    private async Task OnSearch()
    {
        try
            {
                isLoading = true;
                var response = await Http.GetStringAsync($"{UserEndpoints.GetUserByNameURL}/{searchItem}");
                users = JsonSerializer.Deserialize<List<StudentApiReponseDTO>>(response) ?? new List<StudentApiReponseDTO>();
                isLoading= false;
            }
        catch (Exception e)
            {
                isLoading = false;
                Console.WriteLine($"Search failed {e.Message}");    
                users = new List<StudentApiReponseDTO>();
            }
    }

    private void NavigateToStudentInfo(string userId)
    {
        NavigationManager!.NavigateTo($"/student-info/{userId}");
    }

}
