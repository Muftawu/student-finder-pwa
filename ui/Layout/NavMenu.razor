@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Student Finder</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @if(isAuthenticated)
        {
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="add">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Add Student
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="users">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> All Users
            </NavLink>
        </div>
        } 
        else
        {
            <div class="nav-item px-3">
            <NavLink class="nav-link" href="/login">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Login
            </NavLink>
            </div>
            <div class="nav-item px-3">
            <NavLink class="nav-link" href="/register">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Register
            </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private bool isAuthenticated = false;
    protected override async Task OnInitializedAsync()
    {
        var token = await LocalStorage.GetItemAsStringAsync("authToken");

        if (!string.IsNullOrEmpty(token))
        {
            isAuthenticated = true;
        }
    }

    private async void Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        isAuthenticated = false;
        NavigationManager.NavigateTo("/login");
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
